name: C++ Unit Test CI

on:
  push:
    paths-ignore:
      - "docs/*"
      - "third_party/*"
      - .gitignore
      - "*.md"
  pull_request:
    paths-ignore:
      - "docs/*"
      - "third_party/*"
      - .gitignore
      - "*.md"

jobs:
  build_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
         - os: ubuntu-latest
           # ideally we run on 3.8 and 3.9 as well, however we are limited in resources.
           python-version: 3.7
           python-tag: "py37"
           cuda-tag: "cpu"
    steps:
    - name: Check ldd --version
      run: ldd --version
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup conda
      run: |
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
        bash ~/miniconda.sh -b -p $HOME/miniconda -u
    - name: setup Path
      run: |
        echo "$HOME/miniconda/bin" >> $GITHUB_PATH
        echo "CONDA=$HOME/miniconda" >> $GITHUB_PATH
    - name: create conda env
      run: |
        conda create --name build_binary python=${{ matrix.python-version }}
        conda info
    - name: check python version no Conda
      run: |
        python --version
    - name: check python version
      run: |
        conda run -n build_binary python --version
    - name: Install PyTorch
      shell: bash
      run: |
        conda run -n build_binary python -m pip install --pre torch --extra-index-url https://download.pytorch.org/whl/nightly/cpu
    - name: Install gcc10 and cmake
      # use gcc10 for c++20.
      shell: bash
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
        sudo apt update
        sudo apt install gcc-10 g++-10
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100
        sudo apt install cmake
    - name: setup Path
      run: |
        echo /usr/local/bin >> $GITHUB_PATH
    - name: check gcc and cmake version
      shell: bash
      run: |
        gcc --version
        g++ --version
        cmake --version
    - name: create build folder
      shell: bash
      run: |
        mkdir build
    - name: run cmake
      working-directory: ./build
      shell: bash
      run: |
        cmake -DBUILD_TEST=ON ..
    - name: run make
      working-directory: ./build
      shell: bash
      run: |
        make
    - name: Test
      working-directory: ./build
      shell: bash
      run: |
        ctest -v .
